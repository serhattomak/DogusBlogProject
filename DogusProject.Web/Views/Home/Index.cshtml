@model DogusProject.Web.Models.Common.PagedResult<DogusProject.Web.Models.Blog.DTOs.BlogResponseDto>
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-md-11 col-lg-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold">Son Bloglar</h2>
                @if (HttpContextAccessor.HttpContext?.User.IsInRole("Author") == true ||
                HttpContextAccessor.HttpContext?.User.IsInRole("Admin") == true)
                {
                    <a class="btn btn-sm btn-outline-primary rounded-pill" asp-area="Author" asp-controller="Blog" asp-action="Create">+ Yeni Blog</a>
                }
            </div>

            @if (Model.Items != null && Model.Items.Any())
            {
                <div class="vstack gap-4">
                    @foreach (var blog in Model.Items)
                    {
                        <div class="bg-white border rounded shadow-sm p-4">
                            <div class="d-flex justify-content-between mb-2">
                                <div class="text-muted small">
                                    <i class="bi bi-person-fill"></i> @blog.AuthorFullName
                                    &nbsp;|&nbsp;
                                    <i class="bi bi-calendar"></i> @blog.CreatedAt.ToString("dd MMM yyyy")
                                </div>
                            </div>
                            <h5 class="fw-semibold">@blog.Title</h5>
                            <p class="mb-2 text-secondary">@blog.Content</p>

                            <div class="d-flex justify-content-between align-items-center mt-2">
                                <button type="button"
                                        class="btn btn-sm btn-outline-secondary"
                                        data-bs-toggle="modal"
                                        data-bs-target="#commentModal"
                                        data-blog-id="@blog.Id"
                                        data-blog-title="@blog.Title">
                                    <i class="bi bi-chat-left"></i>
                                </button>

                                <a asp-area="Public" asp-controller="Blog" asp-action="Detail" asp-route-id="@blog.Id" class="btn btn-outline-primary btn-sm rounded-pill">Devamını oku</a>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                <nav class="mt-4">
                    <ul class="pagination justify-content-center">
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-route-page="@i">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
            else
            {
                <div class="alert alert-info">Henüz blog paylaşımı yapılmamış.</div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="commentModal" tabindex="-1" aria-labelledby="commentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Yorum Yap</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">

                @if (User.Identity?.IsAuthenticated == true)
                {
                    <form id="commentForm">
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="modalBlogId" name="BlogId"/>
                        <div class="mb-3">
                            <label for="commentContent" class="form-label">Yorumunuz</label>
                            <textarea class="form-control" id="commentContent" name="Content" rows="3"></textarea>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Yorumu Gönder</button>
                        </div>
                    </form>
                }
                else
                {
                    <div class="alert alert-warning">Yorum yapmak için giriş yapmalısınız.</div>
                    <div class="d-flex justify-content-between">
                        <a class="btn btn-outline-primary w-50 me-2 rounded-pill" asp-area="Auth" asp-controller="Auth" asp-action="Login">Giriş Yap</a>
                        <a class="btn btn-outline-secondary w-50 me-2 rounded-pill" asp-area="Auth" asp-controller="Auth" asp-action="Register">Kayıt Ol</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('[data-bs-target="#commentModal"]').forEach(button => {
            button.addEventListener('click',
                function() {
                    const blogId = this.getAttribute('data-blog-id');
                    const title = this.getAttribute('data-blog-title');

                    const blogIdInput = document.getElementById('modalBlogId');
                    const modalTitle = document.querySelector('#commentModal .modal-title');

                    if (blogIdInput) blogIdInput.value = blogId;
                    if (modalTitle) modalTitle.textContent = `Yorum Yap - ${title}`;
                });
        });

        const commentForm = document.getElementById('commentForm');
        if (commentForm) {
            commentForm.addEventListener('submit',
                async (e) => {
                    e.preventDefault();

                    const blogId = document.getElementById('modalBlogId')?.value;
                    const content = document.getElementById('commentContent')?.value;

                    if (!blogId || !content) {
                        alert("Yorum içeriği veya Blog ID eksik.");
                        return;
                    }

                    try {
                        const response = await fetch("https://localhost:7174/api/comment",
                            {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'Authorization': `Bearer ${window.accessToken}`
                                },
                                credentials: 'include',
                                body: JSON.stringify({ blogId, content })
                            });

                        if (response.ok) {
                            alert("Yorum gönderildi.");
                            bootstrap.Modal.getInstance(document.getElementById('commentModal'))?.hide();
                            document.getElementById('commentContent').value = '';
                        } else {
                            const err = await response.text();
                            console.error(err);
                            alert("Yorum gönderilemedi.");
                        }
                    } catch (err) {
                        console.error("İstek hatası:", err);
                        alert("İstek gönderilemedi.");
                    }
                });
        }

    </script>
}
